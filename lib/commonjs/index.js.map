{"version":3,"names":["_reactNative","require","_react","LINKING_ERROR","Platform","select","ios","default","RNOtpVerify","NativeModules","OtpVerify","Proxy","get","Error","eventEmitter","NativeEventEmitter","getOtp","OS","console","warn","startOtpListener","handler","then","addListener","useOtpVerify","numberOfDigits","message","setMessage","useState","otp","setOtp","timeoutError","setTimeoutError","hash","setHash","handleMessage","response","otpDigits","RegExp","exec","useEffect","getHash","removeListener","startListener","stopListener","exports","requestHint","removeAllListeners","_default"],"sources":["index.tsx"],"sourcesContent":["import {NativeEventEmitter, NativeModules, Platform} from 'react-native';\nimport {useEffect, useState} from 'react';\n\nconst LINKING_ERROR =\n  `The package 'react-native-otp-verify' doesn't seem to be linked. Make sure: \\n\\n` +\n  Platform.select({ios: \"- You have run 'pod install'\\n\", default: ''}) +\n  '- You rebuilt the app after installing the package\\n' +\n  '- You are not using Expo managed workflow\\n';\n\nconst RNOtpVerify = NativeModules.OtpVerify\n  ? NativeModules.OtpVerify\n  : new Proxy(\n      {},\n      {\n        get() {\n          throw new Error(LINKING_ERROR);\n        },\n      },\n    );\n\nconst eventEmitter = new NativeEventEmitter(RNOtpVerify);\n\ninterface OtpVerify {\n  getOtp: () => Promise<boolean>;\n  getHash: () => Promise<string[]>;\n  requestHint: () => Promise<string>;\n  startOtpListener: (\n    handler: (value: string) => any,\n  ) => Promise<import('react-native').EmitterSubscription>;\n  addListener: (\n    handler: (value: string) => any,\n  ) => import('react-native').EmitterSubscription;\n  removeListener: () => void;\n}\n\nexport async function getOtp(): Promise<boolean> {\n  if (Platform.OS === 'ios') {\n    console.warn('Not Supported on iOS');\n    return false;\n  }\n  return RNOtpVerify.getOtp();\n}\n\nexport function startOtpListener(\n  handler: (value: string) => any,\n): Promise<import('react-native').EmitterSubscription> {\n  return getOtp().then(() => addListener(handler));\n}\n\nexport const useOtpVerify = ({numberOfDigits} = {numberOfDigits: 0}) => {\n  const [message, setMessage] = useState<string | null>(null);\n  const [otp, setOtp] = useState<string | null>(null);\n  const [timeoutError, setTimeoutError] = useState<boolean>(false);\n  const [hash, setHash] = useState<string[] | null>([]);\n\n  const handleMessage = (response: string) => {\n    if (response === 'Timeout Error.') {\n      setTimeoutError(true);\n    } else {\n      setMessage(response);\n      if (numberOfDigits && response) {\n        const otpDigits = new RegExp(`(\\\\d{${numberOfDigits}})`, 'g').exec(\n          response,\n        );\n        if (otpDigits && otpDigits[1]) setOtp(otpDigits[1]);\n      }\n    }\n  };\n  useEffect(() => {\n    if (Platform.OS === 'ios') {\n      console.warn('Not Supported on iOS');\n      return;\n    }\n    getHash().then(setHash);\n    startOtpListener(handleMessage);\n    return () => {\n      removeListener();\n    };\n  }, []);\n  const startListener = () => {\n    if (Platform.OS === 'ios') {\n      console.warn('Not Supported on iOS');\n      return;\n    }\n    setOtp('');\n    setMessage('');\n    startOtpListener(handleMessage);\n  };\n  const stopListener = () => {\n    if (Platform.OS === 'ios') {\n      console.warn('Not Supported on iOS');\n      return;\n    }\n    removeListener();\n  };\n  return {otp, message, hash, timeoutError, stopListener, startListener};\n};\n\nexport async function getHash(): Promise<string[]> {\n  if (Platform.OS === 'ios') {\n    console.warn('Not Supported on iOS');\n    return [];\n  }\n  return RNOtpVerify.getHash();\n}\nexport async function requestHint(): Promise<string> {\n  if (Platform.OS === 'ios') {\n    console.warn('Not Supported on iOS');\n    return '';\n  }\n  return RNOtpVerify.requestHint();\n}\n\nexport function addListener(\n  handler: (value: string) => any,\n): import('react-native').EmitterSubscription {\n  return eventEmitter.addListener('com.kailas.otpVerify:otpReceived', handler);\n}\n\nexport function removeListener(): void {\n  return eventEmitter.removeAllListeners('com.kailas.otpVerify:otpReceived');\n}\n\nconst OtpVerify: OtpVerify = {\n  getOtp,\n  getHash,\n  addListener,\n  removeListener,\n  startOtpListener,\n  requestHint,\n};\n\nexport default OtpVerify;\n"],"mappings":"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","ignoreList":[]}